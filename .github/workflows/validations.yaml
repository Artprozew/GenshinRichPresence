name: Checks

on: [pull_request, push]

jobs:
  validate-vermin:
    name: vermin for v${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.12']
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install Python v${{ matrix.python-version }} dependencies
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '${{ matrix.python-version }}'
          cache: "pip"
      - run: pip install -r requirements.txt

      - name: Validate Python version v${{ matrix.python-version }} (vermin)
        run: |
          vermin -t=${{ matrix.python-version }} --violations
          --eval-annotations --backport asyncio --backport configparser --backport typing

  type-check-mypy:
    name: mypy for v${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.12']
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install Python v${{ matrix.python-version }} dependencies
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '${{ matrix.python-version }}'
          cache: "pip"
      - run: pip install -r requirements.txt

      - name: Type-check for v${{ matrix.python-version }} (mypy)
        run: mypy src --config-file=setup.cfg --explicit-package-bases --ignore-missing-imports

  lint-flake8:
    name: flake8 for v${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.12']
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install Python v${{ matrix.python-version }} dependencies
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '${{ matrix.python-version }}'
          cache: "pip"
      - run: pip install -r requirements.txt

      - name: Lint for v${{ matrix.python-version }} (flake8)
        run: flake8 src

  lint-black:
    name: black for v${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.12']
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install Python v${{ matrix.python-version }} dependencies
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '${{ matrix.python-version }}'
          cache: "pip"
      - run: pip install -r requirements.txt

      - name: Lint for v${{ matrix.python-version }} (black)
        run: black src --check --diff --color
